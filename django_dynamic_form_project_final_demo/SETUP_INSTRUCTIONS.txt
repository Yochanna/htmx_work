========================================
SETUP INSTRUCTIONS (One-Time Before Submission)
========================================

Follow these steps ONCE on your local machine to prepare the database with demo data:

1. Navigate to project folder:
   cd django_dynamic_form_project_final_demo

2. Run migrations:
   python manage.py makemigrations
   python manage.py migrate

3. Create superuser:
   python manage.py createsuperuser --username admin --email demo@example.com
   (When prompted, set password: admin123)

4. Add demo data:
   python manage.py shell

   Then paste the following:

   from dynamic_forms.models import Student, Teacher, TopicSubmission
   s1 = Student.objects.create(name="Alice", student_id="12345")
   s2 = Student.objects.create(name="Brian", student_id="67890")
   s3 = Student.objects.create(name="Clara", student_id="24680")
   t1 = Teacher.objects.create(name="James", subject="Mathematics")
   t2 = Teacher.objects.create(name="Sarah", subject="Science")
   t3 = Teacher.objects.create(name="Victor", subject="History")
   TopicSubmission.objects.create(teacher=t1, topic="Algebra")
   TopicSubmission.objects.create(teacher=t2, topic="Biology")
   TopicSubmission.objects.create(teacher=t3, topic="World Wars")
   exit()

5. Done! Your db.sqlite3 now contains:
   - Superuser: admin / admin123
   - 3 Students, 3 Teachers, 3 Topic Submissions

6. Test locally:
   python manage.py runserver
   Open: http://127.0.0.1:8000/
   Admin: http://127.0.0.1:8000/admin/ (login: admin / admin123)

7. Re-zip the project folder (including db.sqlite3) and upload to Google Classroom.

========================================
FOR TEACHER (Instructions to include in submission)
========================================

Extract the zip, then run:
   python manage.py runserver

Open:
   - App: http://127.0.0.1:8000/
   - Admin: http://127.0.0.1:8000/admin/

Login credentials:
   Username: admin
   Password: admin123

========================================
OPTIONAL: RENDER.COM DEPLOYMENT
========================================

To deploy online:
1. Push this project to GitHub
2. Create account on Render.com
3. Create new Web Service → Connect GitHub repo
4. Render will auto-detect Django and use the Procfile
5. Add environment variable: DATABASE_URL (Render provides PostgreSQL automatically)
6. Deploy → You'll get a live URL like: https://your-app.onrender.com

Admin will be at: https://your-app.onrender.com/admin/
(You'll need to run migrations and create superuser on Render via shell)
